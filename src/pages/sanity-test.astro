---
import Layout from '../layouts/Layout.astro';
import { sanityFetch } from '../lib/sanity-astro';
import SanityTestReact from '../components/SanityTest';
import '../styles/global.css';

interface Project {
  _id: string;
  title: string;
  description: string;
  slug: string;
  category: string;
  featured: boolean;
}

// Fetch some basic data from Sanity
let projects: Project[] = [];
let error: string | null = null;

try {
  projects = await sanityFetch<Project[]>({
    query: `*[_type == "project"][0...3]{
      _id,
      title,
      description,
      "slug": slug.current,
      category,
      featured
    }`
  });
} catch (e: any) {
  console.error("Error fetching from Sanity:", e);
  error = e.message || "Unknown error";
}

// Output the raw data for debugging
console.log("Sanity data:", projects);
---

<Layout title="Sanity Test">
  <div class="container mx-auto px-4 py-16">
    <h1 class="text-3xl font-bold mb-8">Sanity Integration Test</h1>
    
    <div class="mb-12">
      <h2 class="text-2xl font-semibold mb-4">Astro Component (Server-side)</h2>
      {error ? (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-8">
          <p>Error fetching data from Sanity: {error}</p>
          <p class="mt-2 text-sm">Make sure your Sanity project is set up with the correct schema and has content.</p>
        </div>
      ) : (
        <div>
          <h3 class="text-xl font-semibold mb-4">Projects from Sanity:</h3>
          {projects.length === 0 ? (
            <p>No projects found. Have you added any projects to your Sanity studio?</p>
          ) : (
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              {projects.map((project) => (
                <div class="border rounded-lg p-6 bg-white shadow-sm">
                  <h3 class="text-lg font-bold">{project.title}</h3>
                  <p class="text-gray-600 text-sm mt-1">Category: {project.category}</p>
                  {project.featured && <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded mt-2 inline-block">Featured</span>}
                  <p class="mt-4">{project.description}</p>
                </div>
              ))}
            </div>
          )}
          
          <div class="mt-12 p-4 bg-gray-100 rounded overflow-auto">
            <h3 class="text-lg font-semibold mb-2">Raw Response:</h3>
            <pre class="text-xs">{JSON.stringify(projects, null, 2)}</pre>
          </div>
        </div>
      )}
    </div>
    
    <hr class="my-12 border-gray-200" />
    
    <div>
      <h2 class="text-2xl font-semibold mb-4">React Component (Client-side)</h2>
      <SanityTestReact client:only="react" />
    </div>
  </div>
</Layout> 